import math
from datetime import date
from math import trunc

from aiogram import Router, F
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import CallbackQuery, Message, InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder

from utils.database import Database
from utils.constants import GROUP_ID_REVIEWS
router = Router()
db = Database()


class LeaveReviewsStates(StatesGroup):
    waiting_many_star = State()
    waiting_text = State()


@router.callback_query(lambda cq: cq.data.startswith("leave_reviews_"))
async def start_reviews(callback: CallbackQuery, state: FSMContext):
    await callback.answer()

    data = await state.get_data()

    amount_gold = callback.data.split("_")[3]
    await state.update_data(amount_gold=amount_gold)
    await callback.message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤–µ–∑–¥", reply_markup=InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="‚≠êÔ∏è", callback_data="rating_1"),
            InlineKeyboardButton(text="‚≠ê‚≠êÔ∏è", callback_data="rating_2"),
            InlineKeyboardButton(text="‚≠ê‚≠ê‚≠êÔ∏è", callback_data="rating_3"),
            InlineKeyboardButton(text="4 - ‚≠êÔ∏è", callback_data="rating_4"),
            InlineKeyboardButton(text="5 - ‚≠êÔ∏è", callback_data="rating_5")
        ],
        [
            InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back"),
            InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="to_home_menu")
        ]
    ]))


@router.callback_query(lambda cq: cq.data.startswith("rating_"))
async def handle_rating(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    rating = int(callback.data.split("_")[1])
    await state.update_data(rating=rating)
    button = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ü–µ–Ω–∫—É –±–µ–∑ –æ—Ç–∑—ã–≤–∞", callback_data="send_without_reviews")
        ],
        [
            InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back"),
            InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="to_home_menu")
        ]
    ])
    await callback.message.answer(f"–í—ã –æ—Ü–µ–Ω–∏–ª–∏ –Ω–∞—Å –Ω–∞ {'‚≠êÔ∏è' * rating}", reply_markup=button)
    await callback.message.answer("–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –≤–≤–µ—Å—Ç–∏ —Ç–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞, —Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ —Å–Ω–∏–∑—É. –¢–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –ø—Ä–∏–ª–æ–∂–∏—Ç—å —Ñ–æ—Ç–æ")
    await state.set_state(LeaveReviewsStates.waiting_text)


@router.callback_query(lambda cq: cq.data == "send_without_reviews")
async def post_only_text(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    data = await state.get_data()
    if data.get("has_left_review", False) is True:
        await callback.message.answer("–í—ã —É–∂–µ –æ—Å—Ç–∞–≤–ª—è–ª–∏ –æ—Ç–∑—ã–≤ –∏ –Ω–µ –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ —Å–Ω–æ–≤–∞.")
        return
    amount_gold = data.get("amount_gold")
    rating = data.get("rating")

    await callback.bot.send_message(
        chat_id=GROUP_ID_REVIEWS,
        text=f"{'‚≠êÔ∏è' * rating}\n\n"
             f"‚¨áÔ∏è{callback.from_user.full_name}‚¨áÔ∏è\n"
             f"–†–µ—à–∏–ª –ø—Ä–æ–º–æ–ª—á–∞—Ç—å...\n\n"
             f"–í—ã–≤–µ–ª {amount_gold}–í-–ë–∞–∫—Å–æ–≤ , {date.today()}"
    )

    await state.update_data(has_left_review=True)

    link = "t.me/ARANEWSSHOPREVIEWS"
    await callback.message.answer(
        f"–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–≤–∏–ª–∏ –æ—Ç–∑—ã–≤! –í—ã –º–æ–∂–µ—Ç–µ –µ–≥–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ –Ω–∞—à–µ–º —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª–µ —Å –æ—Ç–∑—ã–≤–∞–º–∏ - {link}")


@router.message(LeaveReviewsStates.waiting_text)
async def process_text(message: Message, state: FSMContext):
    text_to_reviews = message.text
    data = await state.get_data()
    amount_gold = data.get("amount_gold")
    rating = data.get("rating")

    if data.get("has_left_review", False) is True:
        await message.answer("–í—ã —É–∂–µ –æ—Å—Ç–∞–≤–ª—è–ª–∏ –æ—Ç–∑—ã–≤ –∏ –Ω–µ –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ —Å–Ω–æ–≤–∞.")
        return

    if message.photo:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –≤–º–µ—Å—Ç–µ —Å —Ç–µ–∫—Å—Ç–æ–º –æ—Ç–∑—ã–≤–∞
        photo = message.photo[-1]  # –ü–æ–ª—É—á–∞–µ–º —Å–∞–º–æ–µ –±–æ–ª—å—à–æ–µ —Ñ–æ—Ç–æ
        await message.bot.send_photo(
            chat_id=GROUP_ID_REVIEWS,
            photo=photo.file_id,
            caption=f"{'‚≠êÔ∏è' * rating}\n\n"
                    f"‚¨áÔ∏è{message.from_user.full_name}‚¨áÔ∏è\n"
                    f"{message.caption}\n\n"
                    f"–í—ã–≤–µ–ª {amount_gold}–í-–ë–∞–∫—Å–æ–≤, {date.today()}"
        )
    else:
        # –ï—Å–ª–∏ —Ñ–æ—Ç–æ –Ω–µ—Ç, –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç
        await message.bot.send_message(
            chat_id=GROUP_ID_REVIEWS,
            text=f"{'‚≠êÔ∏è' * rating}\n\n"
                 f"‚¨áÔ∏è{message.from_user.full_name}‚¨áÔ∏è\n"
                 f"{message.text}\n\n"
                 f"–í—ã–≤–µ–ª {amount_gold}–í-–ë–∞–∫—Å–æ–≤, {date.today()}"
        )

    await state.update_data(has_left_review=True)

    link = "t.me/arafortreviews"
    await message.answer(
        f"–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–≤–∏–ª–∏ –æ—Ç–∑—ã–≤! –í—ã –º–æ–∂–µ—Ç–µ –µ–≥–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ –Ω–∞—à–µ–º —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª–µ —Å –æ—Ç–∑—ã–≤–∞–º–∏ - {link}")

