from aiogram import Router, F
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery
from keyboards.user_keyboards import start_bot_menu, admin_menu
from utils.database import Database
from utils.varibles import ADMIN_IDS

router = Router()
db = Database()


@router.message(CommandStart())
async def start_command(message: Message, command: CommandStart):
    if message.from_user.username == "":
        await message.answer("‚ùå –ö —Å–æ–∂–µ–ª–µ–Ω–∏—é –Ω–∞—à –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª–∫—å–æ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏, —É –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å username. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ username –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        return
    

    try:
        await message.delete()
        
        if message.from_user.id in ADMIN_IDS:
            await message.bot.send_message(chat_id=message.chat.id, text="–ü–æ—Å–∫–æ–ª—å–∫—É –≤—ã –∞–¥–º–∏–Ω, –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:", reply_markup=admin_menu())


        user_id = str(message.from_user.id)
        username = message.from_user.username or "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –ë–î
        is_new_user = not db.is_exists(user_id)
        
        if is_new_user:
            try:
                # –ü–æ–ª—É—á–∞–µ–º ID —Ä–µ—Ñ–µ—Ä–µ—Ä–∞ –∏–∑ –∫–æ–º–∞–Ω–¥—ã —Å—Ç–∞—Ä—Ç (–µ—Å–ª–∏ –µ—Å—Ç—å)
                try:
                    referrer_id = int(command.args) if command.args and command.args.isdigit() else None
                    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    db.add_user(user_id, username, referrer_id)
                except (ValueError, TypeError):
                    # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å ID —Ä–µ—Ñ–µ—Ä–µ—Ä–∞, –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–µ–∑ —Ä–µ—Ñ–µ—Ä–µ—Ä–∞
                    db.add_user(user_id, username, None)
                
                welcome_text = (
                    f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {username}!\n\n"
                    "üéÆ –í—ã –ø–æ–ø–∞–ª–∏ –≤ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ –±–æ—Ç–∞ –ø–æ –ø—Ä–æ–¥–∞–∂–µ V-Bucks –¥–ª—è Fortnite.\n"
                    "üí´ –£ –Ω–∞—Å —Å–∞–º—ã–µ –≤—ã–≥–æ–¥–Ω—ã–µ —Ü–µ–Ω—ã –∏ –±—ã—Å—Ç—Ä–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞!\n\n"
                    "‚ñ∂Ô∏è –í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª –≤ –º–µ–Ω—é –Ω–∏–∂–µ üëá\n"
                    "‚ùì –û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã? –ù–∞—à–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –≤—Å–µ–≥–¥–∞ –Ω–∞ —Å–≤—è–∑–∏!"
                )
            except ValueError:
                # –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ referrer_id
                welcome_text = "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
        else:
            welcome_text = (
                f"üéâ –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {username}!\n\n"
                "üíé –†–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å —Å–Ω–æ–≤–∞ –≤ –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ V-Bucks.\n"
                "‚ñ∂Ô∏è –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª –≤ –º–µ–Ω—é –Ω–∏–∂–µ üëá"
            )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await message.bot.send_message(
            chat_id=message.chat.id,
            text=welcome_text,
            reply_markup=start_bot_menu()
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∏–∫–µ—Ä
        await message.bot.send_sticker(
            chat_id=message.chat.id,
            sticker="CAACAgUAAxkBAAKaVWdcYC51Dyz9QQpepSLGgOPQK_MMAAJdEQACr3tRVZEquUWHNk4oNgQ"
        )
        
                
    except Exception as e:
        error_message = f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã: {str(e)}"
        await message.bot.send_message(chat_id=message.chat.id, text=error_message)


@router.message(F.text == "üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥")
async def return_to_main_menu(message: Message, state: FSMContext):
    await state.clear()
    await message.delete()
    await message.answer("‚¨áÔ∏è –í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚¨áÔ∏è", reply_markup=start_bot_menu())
    
@router.callback_query(F.data == "to_home_menu")
async def cancel_newsletter_inline(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    
    await callback.message.edit_text(
            "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            reply_markup=start_bot_menu()
        )
        
    await state.clear()



@router.message(F.text == "/get_id")
async def get_chat_id(message: Message):
    try:
        await message.answer(f"Chat id is: *{message.chat.id}*\nYour id is: *{message.from_user.id}*",
                             parse_mode='Markdown')
    except Exception as e:
        cid = message.chat.id
        await message.answer(f"–û—à–∏–±–∫–∞(",
                             parse_mode='Markdown')
        await message.send_message(7814530746, f"–°–ª—É—á–∏–ª–∞—Å—å *–æ—à–∏–±–∫–∞* –≤ —á–∞—Ç–µ *{cid}*\n–°—Ç–∞—Ç—É—Å –æ—à–∏–±–∫–∏: `{e}`",
                                   parse_mode='Markdown')
