from aiogram import Router, F
from aiogram.types import CallbackQuery, Message
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from keyboards.shop_keyboards import get_back_to_shop_keyboard
from utils.database import Database

router = Router()
db = Database()

LAND_MAP_PRICE = 25
ADMIN_GROUP_ID = -1002389059389

class LandMapStates(StatesGroup):
    waiting_land_map_photos = State()

def get_land_map_keyboard() -> InlineKeyboardBuilder:
    keyboard = InlineKeyboardBuilder()
    keyboard.row(InlineKeyboardButton(text="üí≥ –û–ø–ª–∞—Ç–∏—Ç—å 25‚ÇΩ", callback_data="buy_land_map"))
    keyboard.row(InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –º–∞–≥–∞–∑–∏–Ω", callback_data="shop"))
    return keyboard.as_markup()

def get_confirm_keyboard() -> InlineKeyboardBuilder:
    keyboard = InlineKeyboardBuilder()
    keyboard.row(InlineKeyboardButton(text="‚úÖ –î–∞, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é", callback_data="confirm_land_map"))
    keyboard.row(InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="shop_land_map"))
    return keyboard.as_markup()

def get_admin_confirm_keyboard(user_id: int) -> InlineKeyboardBuilder:
    keyboard = InlineKeyboardBuilder()
    keyboard.row(
        InlineKeyboardButton(text="‚úÖ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä", callback_data=f"send_land_map_{user_id}"),
        InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –ø–æ–∫—É–ø–∫—É", callback_data=f"cancel_land_map_{user_id}")
    )
    return keyboard.as_markup()

@router.callback_query(F.data == "shop_land_map")
async def show_land_map_info(callback: CallbackQuery):
    await callback.message.edit_text(
        text=(
            "üó∫ <b>Land Map - –≤–∞—à –ø—É—Ç—å –∫ –ø–æ–±–µ–¥–µ!</b>\n\n"
            "üìç –ß—Ç–æ –≤–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è Land Map:\n"
            "‚Ä¢ –î–µ—Ç–∞–ª—å–Ω—ã–µ –∫–∞—Ä—Ç—ã –≤—Å–µ—Ö –ª–æ–∫–∞—Ü–∏–π\n"
            "‚Ä¢ –û–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ —Ç–æ—á–∫–∏ –¥–ª—è –≤—ã—Å–∞–¥–∫–∏\n"
            "‚Ä¢ –°–µ–∫—Ä–µ—Ç–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏ –¥–ª—è –∑–∞—Å–∞–¥\n"
            "‚Ä¢ –ú–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ª—É—Ç–∞\n"
            "‚Ä¢ –¢–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ç–æ—á–∫–∏ –¥–ª—è –∫–æ–º–∞–Ω–¥–Ω–æ–π –∏–≥—Ä—ã\n\n"
            "üí° –° —ç—Ç–∏–º–∏ –∫–∞—Ä—Ç–∞–º–∏ –≤—ã –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç–µ –Ω–∞ —à–∞–≥ –≤–ø–µ—Ä–µ–¥–∏ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–æ–≤!\n\n"
            "üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: 25‚ÇΩ"
        ),
        reply_markup=get_land_map_keyboard()
    )

@router.callback_query(F.data == "buy_land_map")
async def confirm_purchase(callback: CallbackQuery):
    await callback.message.edit_text(
        text="–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ Land Map –∑–∞ 25‚ÇΩ‚ùì",
        reply_markup=get_confirm_keyboard()
    )

@router.callback_query(F.data == "confirm_land_map")
async def process_purchase(callback: CallbackQuery):
    # Here should be balance check and deduction logic
    user_id = callback.from_user.id
    username = callback.from_user.username or "–ë–µ–∑ username"
    full_name = callback.from_user.full_name
    
    user = db.get_user(telegram_id=user_id)
    if user[3] < LAND_MAP_PRICE:
        await callback.message.edit_text(
            text="‚ùå –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ Land Map.",
            reply_markup=get_back_to_shop_keyboard()
        )
        return
    db.update_user(telegram_id=user_id, balance=user[3] - LAND_MAP_PRICE)

    await callback.message.edit_text(
        text="‚úÖ –û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!\n–û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.",
        reply_markup=get_back_to_shop_keyboard()
    )
    
    # Sending notification to admin group
    await callback.bot.send_message(
        chat_id=ADMIN_GROUP_ID,
        text=(
            f"üõç –ù–æ–≤–∞—è –ø–æ–∫—É–ø–∫–∞ Land Map!\n\n"
            f"üë§ –ü–æ–∫—É–ø–∞—Ç–µ–ª—å: {full_name}\n"
            f"üÜî ID: {user_id}\n"
            f"üìù Username: @{username}\n"
            f"üí∞ –°—É–º–º–∞: {LAND_MAP_PRICE}‚ÇΩ"
        ),
        reply_markup=get_admin_confirm_keyboard(user_id)
    )

@router.callback_query(F.data.startswith("send_land_map_"))
async def admin_send_land_map(callback: CallbackQuery, state: FSMContext):
    user_id = int(callback.data.split("_")[-1])
    await state.set_state(LandMapStates.waiting_land_map_photos)
    await state.update_data(user_id=user_id)
    await callback.message.edit_text(
        "üì§ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ Land Map –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º"
    )

@router.callback_query(F.data.startswith("cancel_land_map_"))
async def admin_cancel_purchase(callback: CallbackQuery):
    user_id = int(callback.data.split("_")[-1])
    # Here should be balance return logic
    await callback.bot.send_message(
        chat_id=user_id,
        text=(
            "‚ùå –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à–∞ –ø–æ–∫—É–ø–∫–∞ Land Map –±—ã–ª–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.\n"
            "üìû –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É –¥–ª—è –≤—ã—è—Å–Ω–µ–Ω–∏—è –ø—Ä–∏—á–∏–Ω—ã."
        ),
        reply_markup=get_back_to_shop_keyboard()
    )
    await callback.message.edit_text("–ü–æ–∫—É–ø–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞")

@router.message(LandMapStates.waiting_land_map_photos)
async def process_land_map_photos(message: Message, state: FSMContext):
    if not message.photo:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ Land Map –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.")
        return

    data = await state.get_data()
    user_id = data["user_id"]
    # Send photos to user
    await message.copy_to(
        chat_id=user_id,
        caption=(
            "üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏–µ–º Land Map!\n\n"
            "üó∫ –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–º –∫–∞—Ä—Ç–∞–º –∏ –ø–æ–∑–∏—Ü–∏—è–º.\n"
            "üìå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏—Ö —Å —É–º–æ–º –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ø–æ–±–µ–¥—ã!\n\n"
            "–ü—Ä–∏—è—Ç–Ω–æ–π –∏–≥—Ä—ã! üéÆ"
        )
    )
    
    await state.clear()
    await message.answer("‚úÖ Land Map —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é")
