from aiogram import Router, F
from aiogram.types import CallbackQuery, Message, InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from keyboards.shop_keyboards import get_back_to_shop_keyboard
from utils.database import Database
import re
import asyncio
from datetime import datetime, timedelta
from bot import bot

router = Router()
db = Database()

# Dictionary to keep track of timers: user_id -> (end_time, nickname)
timers = {}

class BattlePassStates(StatesGroup):
    waiting_for_donation_type = State()
    waiting_for_nickname_regular = State()
    confirm_purchase_regular = State()
    waiting_for_confirmation_regular = State()
    waiting_for_join_confirmation = State()
    waiting_for_nickname_gift_system = State()
    confirm_purchase_gift_system = State()

@router.callback_query(F.data == "shop_battle_pass")
async def battle_pass_menu(callback: CallbackQuery, state: FSMContext):
    try:
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üéÅ –î–æ–Ω–∞—Ç –æ–±—ã—á–Ω—ã–º –ø–æ–¥–∞—Ä–∫–æ–º (48 —á–∞—Å–æ–≤ –æ–∂–∏–¥–∞–Ω–∏—è)", callback_data="donate_regular_bp")],
            [InlineKeyboardButton(text="üéÅ –î–æ–Ω–∞—Ç —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º—É –ø–æ–¥–∞—Ä–∫–æ–≤ (–±–µ–∑ –æ–∂–∏–¥–∞–Ω–∏—è)", callback_data="donate_gift_system_bp")],
            [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="to_home_menu")]
        ])
        await callback.message.edit_text(
            "üéÆ <b>–ü–æ–∫—É–ø–∫–∞ Battle Pass</b>\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –¥–æ–Ω–∞—Ç–∞:",
            reply_markup=keyboard
        )
        await state.set_state(BattlePassStates.waiting_for_donation_type)
    except Exception as e:
        print(f"Error in battle_pass_menu: {e}")
        await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ")

@router.callback_query(F.data == "donate_regular_bp", BattlePassStates.waiting_for_donation_type)
async def donate_regular_bp(callback: CallbackQuery, state: FSMContext):
    try:
        await callback.message.edit_text(
            "üéÅ <b>–î–æ–Ω–∞—Ç –æ–±—ã—á–Ω—ã–º –ø–æ–¥–∞—Ä–∫–æ–º</b>\n\n"
            "‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–∏–∫–Ω–µ–π–º –≤ Fortnite:\n\n"
            "‚ÑπÔ∏è –ù–∏–∫–Ω–µ–π–º –¥–æ–ª–∂–µ–Ω:\n"
            "‚Ä¢ –°–æ–¥–µ—Ä–∂–∞—Ç—å –æ—Ç 3 –¥–æ 16 —Å–∏–º–≤–æ–ª–æ–≤\n" 
            "‚Ä¢ –°–æ—Å—Ç–æ—è—Ç—å –∏–∑ –±—É–∫–≤, —Ü–∏—Ñ—Ä –∏ —Å–∏–º–≤–æ–ª–æ–≤ - _",
            reply_markup=get_back_to_shop_keyboard()
        )
        await state.set_state(BattlePassStates.waiting_for_nickname_regular)
    except Exception as e:
        print(f"Error in donate_regular_bp: {e}")
        await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ")

@router.message(BattlePassStates.waiting_for_nickname_regular)
async def process_nickname_regular(message: Message, state: FSMContext):
    try:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∏–∫–Ω–µ–π–º–∞
        if not 3 <= len(message.text) <= 16:
            await message.answer(
                "‚ùå –ù–∏–∫–Ω–µ–π–º –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ—Ç 3 –¥–æ 16 —Å–∏–º–≤–æ–ª–æ–≤",
                reply_markup=get_back_to_shop_keyboard()
            )
            return
                
        if not re.match("^[a-zA-Z0-9-_]+$", message.text):
            await message.answer(
                "‚ùå –ù–∏–∫–Ω–µ–π–º –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã –∏ —Å–∏–º–≤–æ–ª—ã - _",
                reply_markup=get_back_to_shop_keyboard()
            )
            return

        await state.update_data(nickname=message.text)
        
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="confirm_bp_purchase_regular")],
            [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel_bp_purchase_regular")],
            [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="to_home_menu")]
        ])
        
        await message.answer(
            f"üìù <b>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞:</b>\n\n"
            f"üë§ –ù–∏–∫–Ω–µ–π–º: {message.text}\n"
            f"üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: 720‚ÇΩ\n\n"
            f"üéÆ Battle Pass –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –ø–æ –∏—Å—Ç–µ—á–µ–Ω–∏–∏ 48 —á–∞—Å–æ–≤!\n\n"
            "‚ùì –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ –ø–æ–∫—É–ø–∫—É?",
            reply_markup=keyboard
        )
        await state.set_state(BattlePassStates.confirm_purchase_regular)
    except Exception as e:
        print(f"Error in process_nickname_regular: {e}")
        await message.answer(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –Ω–∏–∫–Ω–µ–π–º–∞",
            reply_markup=get_back_to_shop_keyboard()
        )

@router.callback_query(F.data == "confirm_bp_purchase_regular", BattlePassStates.confirm_purchase_regular)
async def confirm_purchase_regular(callback: CallbackQuery, state: FSMContext):
    try:
        user_data = await state.get_data()
        user = db.get_user(telegram_id=callback.from_user.id)
        
        if not user:
            await callback.message.edit_text(
                "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
                reply_markup=get_back_to_shop_keyboard()
            )
            await state.clear()
            return

        try:
            balance = int(user[3])
        except ValueError:
            await callback.message.edit_text(
                "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π.",
                reply_markup=get_back_to_shop_keyboard()
            )
            await state.clear()
            return

        if balance < 720:
            await callback.message.edit_text(
                f"‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ!\n\n"
                f"üí∞ –ù–µ–æ–±—Ö–æ–¥–∏–º–æ: 720‚ÇΩ\n"
                f"üí≥ –í–∞—à –±–∞–ª–∞–Ω—Å: {balance}‚ÇΩ\n\n"
                "üì• –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ–∫—É–ø–∫–∏",
                reply_markup=get_back_to_shop_keyboard()
            )
            await state.clear()
            return

        admin_keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(text="‚úÖ –í—ã–¥–∞–Ω–æ", callback_data=f"bp_gift_sent_regular_{callback.from_user.id}_{user_data['nickname']}"),
                InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data=f"bp_gift_cancel_regular_{callback.from_user.id}")
            ],
            [InlineKeyboardButton(text="üì± –°–≤—è–∑–∞—Ç—å—Å—è", url=f"tg://user?id={callback.from_user.id}")],
            [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="to_home_menu")]
        ])

        await callback.bot.send_message(
            chat_id="-1002389059389",
            text=(
                "üéÆ <b>–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –¥–æ–Ω–∞—Ç –æ–±—ã—á–Ω—ã–º –ø–æ–¥–∞—Ä–∫–æ–º : Battle Pass!</b>\n\n"
                f"üë§ –ü–æ–∫—É–ø–∞—Ç–µ–ª—å: {callback.from_user.full_name}\n"
                f"üîó Username: @{callback.from_user.username}\n"
                f"üÜî ID: <code>{callback.from_user.id}</code>\n"
                f"üéØ –ù–∏–∫–Ω–µ–π–º: {user_data['nickname']}\n"
                f"üí∞ –°—É–º–º–∞: 720‚ÇΩ"
            ),
            reply_markup=admin_keyboard
        )

        await callback.message.edit_text(
            "‚úÖ –ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!\n\n"
            "‚è≥ –û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.",
            reply_markup=get_back_to_shop_keyboard()
        )
        await state.set_state(BattlePassStates.waiting_for_confirmation_regular)
    except Exception as e:
        print(f"Error in confirm_purchase_regular: {e}")
        await callback.message.edit_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–∫–∞–∑–∞",
            reply_markup=get_back_to_shop_keyboard()
        )
        await state.clear()

@router.callback_query(F.data.startswith("bp_gift_sent_regular_"))
async def gift_sent_regular(callback: CallbackQuery):
    try:
        user_id = int(callback.data.split("_")[4])
        nickname_fortnite = callback.data.split("_")[5]
        admin_id = callback.from_user.id
        
        user = db.get_user(telegram_id=user_id)
        if not user:
            await callback.answer("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            return

        nickname = user[2]  # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ –Ω–∏–∫–Ω–µ–π–º –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –∏–Ω–¥–µ–∫—Å–µ 2

        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ç–∞–π–º–µ—Ä–∞
        end_time = datetime.now() + timedelta(hours=48)
        timers[user_id] = (end_time, nickname)

        # –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        user_keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="‚è≥ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—Ä–µ–º—è", callback_data=f"check_timer_regular_{user_id}")],
            [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="to_home_menu")]
        ])
        
        await callback.bot.send_message(
            chat_id=user_id,
            text=(
                f"üéÅ Battle Pass –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –ø–æ –∏—Å—Ç–µ—á–µ–Ω–∏–∏ 48 —á–∞—Å–æ–≤!\n\n"
                f"‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∞ –æ–ø–ª–∞—Ç—É.\n"
                f"‚è≥ –¢–∞–π–º–µ—Ä –Ω–∞ 48 —á–∞—Å–æ–≤ –∑–∞–ø—É—â–µ–Ω.\n"
                f"–û—Å—Ç–∞–ª–æ—Å—å: 48:00:00 –¥–æ –≤—ã–¥–∞—á–∏ –≤–∞–º –ø–æ–¥–∞—Ä–∫–∞ –Ω–∞ –Ω–∏–∫ : {nickname_fortnite}.\n\n"
            ),
            reply_markup=user_keyboard
        )
        
        # –°–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –∏ –≤–ª–∞–¥–µ–ª—å—Ü—É
        admin_keyboard_timer = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="‚è≥ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Å—Ç–∞–≤—à–µ–µ—Å—è –≤—Ä–µ–º—è", callback_data=f"check_timer_regular_{user_id}")],
            [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="to_home_menu")]
        ])
        
        await callback.bot.send_message(
            chat_id="-1002389059389",
            text=(
                f"‚úÖ –î–æ–Ω–∞—Ç –æ–±—ã—á–Ω—ã–º –ø–æ–¥–∞—Ä–∫–æ–º –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{nickname} –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω.\n"
                "‚è≥ –¢–∞–π–º–µ—Ä –Ω–∞ 48 —á–∞—Å–æ–≤ –∑–∞–ø—É—â–µ–Ω.\n"
                f"–û—Å—Ç–∞–ª–æ—Å—å: 48:00:00 –¥–æ –≤—ã–¥–∞—á–∏ –ø–æ–¥–∞—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–∞ –Ω–∏–∫ {nickname_fortnite}."
            ),
            reply_markup=admin_keyboard_timer
        )
        
        await callback.message.edit_reply_markup()
        await callback.answer("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã")
    
        # –ó–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–∞ –Ω–∞ 48 —á–∞—Å–æ–≤
        asyncio.create_task(start_timer(user_id, 48))
    except Exception as e:
        print(f"Error in gift_sent_regular: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")

async def start_timer(user_id: int, hours: int):
    try:
        await asyncio.sleep(hours * 3600)
        # –õ–æ–≥–∏–∫–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ç–∞–π–º–µ—Ä–∞, —Å–ø–∏—Å–∞–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if user_id in timers:
            del timers[user_id]
        # –°–ø–∏—Å—ã–≤–∞–µ–º –±–∞–ª–∞–Ω—Å
        db.update_user(str(user_id), balance=-720)
        await bot.send_message(
            chat_id=user_id,
            text="‚è∞ –¢–∞–π–º–µ—Ä –Ω–∞ 48 —á–∞—Å–æ–≤ –∏—Å—Ç–µ–∫. –í–∞—à –±–∞–ª–∞–Ω—Å –±—ã–ª —Å–ø–∏—Å–∞–Ω –Ω–∞ 720‚ÇΩ."
        )
    except Exception as e:
        print(f"Error in start_timer: {e}")

@router.callback_query(F.data.startswith("check_timer_regular_"))
async def check_timer_regular(callback: CallbackQuery):
    try:
        user_id = int(callback.data.split("_")[3])
        
        if user_id not in timers:
            await callback.answer("‚åõÔ∏è –¢–∞–π–º–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —É–∂–µ –∏—Å—Ç–µ–∫.")
            return

        end_time, nickname = timers[user_id]
        remaining_time = end_time - datetime.now()
        if remaining_time.total_seconds() < 0:
            await callback.answer("‚è≥ –¢–∞–π–º–µ—Ä —É–∂–µ –∏—Å—Ç–µ–∫.")
            return

        hours, remainder = divmod(int(remaining_time.total_seconds()), 3600)
        minutes, seconds = divmod(remainder, 60)
        time_str = f"{hours:02d}:{minutes:02d}:{seconds:02d}"
        await callback.answer(f"‚è≥ –û—Å—Ç–∞–ª–æ—Å—å –≤—Ä–µ–º–µ–Ω–∏: {time_str}")
    except Exception as e:
        print(f"Error in check_timer_regular: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–∞–π–º–µ—Ä–∞.")

@router.callback_query(F.data.startswith("bp_gift_cancel_regular_"))
async def cancel_purchase_regular(callback: CallbackQuery):
    try:
        user_id = int(callback.data.split("_")[4])
        
        await callback.bot.send_message(
            chat_id=user_id,
            text=(
                "‚ùå –í–∞—à–∞ –ø–æ–∫—É–ø–∫–∞ Battle Pass –æ—Ç–º–µ–Ω–µ–Ω–∞\n\n"
                "üí≠ –ï—Å–ª–∏ –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã - –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É\n"
                "üí∞ –°—Ä–µ–¥—Å—Ç–≤–∞ –æ—Å—Ç–∞–Ω—É—Ç—Å—è –Ω–∞ –±–∞–ª–∞–Ω—Å–µ"
            ),
            reply_markup=get_back_to_shop_keyboard()
        )
        
        await callback.message.edit_reply_markup()
        await callback.answer("‚ùå –ü–æ–∫—É–ø–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞")
    except Exception as e:
        print(f"Error in cancel_purchase_regular: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–º–µ–Ω—ã –ø–æ–∫—É–ø–∫–∏")





@router.callback_query(F.data == "donate_gift_system_bp", BattlePassStates.waiting_for_donation_type)
async def donate_gift_system_bp(callback: CallbackQuery, state: FSMContext):
    try:
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="‚úÖ –î–∞, –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è", callback_data="confirm_join_gift_system_bp")],
            [InlineKeyboardButton(text="‚ùå –ù–µ—Ç, –≤–µ—Ä–Ω—É—Ç—å—Å—è", callback_data="to_home_menu")]
        ])
        await callback.message.edit_text(
            "üéÅ <b>–î–æ–Ω–∞—Ç —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º—É –ø–æ–¥–∞—Ä–∫–æ–≤</b>\n\n"
            "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ —Å–∏—Å—Ç–µ–º–µ –ø–æ–¥–∞—Ä–∫–æ–≤?",
            reply_markup=keyboard
        )
        await state.set_state(BattlePassStates.waiting_for_join_confirmation)
    except Exception as e:
        print(f"Error in donate_gift_system_bp: {e}")
        await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ")

@router.callback_query(F.data == "confirm_join_gift_system_bp", BattlePassStates.waiting_for_join_confirmation)
async def confirm_join_gift_system_bp(callback: CallbackQuery, state: FSMContext):
    try:
        await callback.message.edit_text(
            "üéÅ <b>–î–æ–Ω–∞—Ç —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º—É –ø–æ–¥–∞—Ä–∫–æ–≤</b>\n\n"
            "‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–∏–∫–Ω–µ–π–º –≤ Fortnite:\n\n"
            "‚ÑπÔ∏è –ù–∏–∫–Ω–µ–π–º –¥–æ–ª–∂–µ–Ω:\n"
            "‚Ä¢ –°–æ–¥–µ—Ä–∂–∞—Ç—å –æ—Ç 3 –¥–æ 16 —Å–∏–º–≤–æ–ª–æ–≤\n" 
            "‚Ä¢ –°–æ—Å—Ç–æ—è—Ç—å –∏–∑ –±—É–∫–≤, —Ü–∏—Ñ—Ä –∏ —Å–∏–º–≤–æ–ª–æ–≤ - _",
            reply_markup=get_back_to_shop_keyboard()
        )
        await state.set_state(BattlePassStates.waiting_for_nickname_gift_system)
    except Exception as e:
        print(f"Error in confirm_join_gift_system_bp: {e}")
        await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ")

@router.message(BattlePassStates.waiting_for_nickname_gift_system)
async def process_nickname_gift_system(message: Message, state: FSMContext):
    try:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∏–∫–Ω–µ–π–º–∞
        if not 3 <= len(message.text) <= 16:
            await message.answer(
                "‚ùå –ù–∏–∫–Ω–µ–π–º –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ—Ç 3 –¥–æ 16 —Å–∏–º–≤–æ–ª–æ–≤",
                reply_markup=get_back_to_shop_keyboard()
            )
            return
                
        if not re.match("^[a-zA-Z0-9-_]+$", message.text):
            await message.answer(
                "‚ùå –ù–∏–∫–Ω–µ–π–º –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã –∏ —Å–∏–º–≤–æ–ª—ã - _",
                reply_markup=get_back_to_shop_keyboard()
            )
            return

        await state.update_data(nickname_gift_system=message.text)
        
        admin_keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞—á–∏—Å–ª–µ–Ω–∏–µ", callback_data=f"confirm_gift_system_{message.from_user.id}"),
                InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data=f"cancel_gift_system_{message.from_user.id}")
            ],
            [InlineKeyboardButton(text="üì± –°–≤—è–∑–∞—Ç—å—Å—è", url=f"tg://user?id={message.from_user.id}")],
            [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="to_home_menu")]
        ])
        
        user_data = await state.get_data()
        await message.bot.send_message(
            chat_id="-1002389059389",
            text=(
                "üéÅ <b>–ù–æ–≤—ã–π –¥–æ–Ω–∞—Ç —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º—É –ø–æ–¥–∞—Ä–∫–æ–≤!</b>\n\n"
                f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {message.from_user.full_name}\n"
                f"üîó Username: @{message.from_user.username}\n"
                f"üÜî ID: <code>{message.from_user.id}</code>\n"
                f"üéØ –ù–∏–∫–Ω–µ–π–º: {user_data['nickname_gift_system']}"
            ),
            reply_markup=admin_keyboard
        )
        
        await message.answer(
            "‚úÖ –í–∞—à –∑–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É. –û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.",
            reply_markup=get_back_to_shop_keyboard()
        )
        await state.clear()
    except Exception as e:
        print(f"Error in process_nickname_gift_system: {e}")
        await message.answer(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –Ω–∏–∫–Ω–µ–π–º–∞",
            reply_markup=get_back_to_shop_keyboard()
        )

@router.callback_query(F.data.startswith("confirm_gift_system_"))
async def confirm_gift_system(callback: CallbackQuery):
    try:
        user_id = int(callback.data.split("_")[3])
        
        user = db.get_user(telegram_id=user_id)
        if not user:
            await callback.answer("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            return

        nickname = user[2]  # Assuming nickname is at index 2

        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ç–∞–π–º–µ—Ä–∞
        end_time = datetime.now() + timedelta(hours=48)
        timers[user_id] = (end_time, nickname)

        user_keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="‚úÖ –ü—Ä–æ–≤–µ—Ä–∏–ª, –∑–∞—á–∏—Å–ª–µ–Ω–æ", callback_data=f"gift_system_confirmed_{user_id}")],
            [InlineKeyboardButton(text="‚ùå –ù–µ –∑–∞—á–∏—Å–ª–µ–Ω–æ", callback_data=f"gift_system_not_confirmed_{user_id}")],
            [InlineKeyboardButton(text="‚è≥ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Å—Ç–∞–≤—à–µ–µ—Å—è –≤—Ä–µ–º—è", callback_data=f"check_time_gift_system_{user_id}")],
            [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="to_home_menu")]
        ])
        
        await callback.bot.send_message(
            chat_id=user_id,
            text=(
                f"üéÅ –í–∞—à Battle Pass —É—Å–ø–µ—à–Ω–æ –∑–∞—á–∏—Å–ª–µ–Ω –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç!\n\n"
                "‚úÖ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç. –ï—Å–ª–∏ –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.\n"
                "‚è≥ –¢–∞–π–º–µ—Ä –Ω–∞ 48 —á–∞—Å–æ–≤ –∑–∞–ø—É—â–µ–Ω.\n"
                f"–û—Å—Ç–∞–ª–æ—Å—å: 48:00:00 –¥–æ –≤—ã–¥–∞—á–∏ –ø–æ–¥–∞—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–∞ –Ω–∏–∫ {nickname}."
            ),
            reply_markup=user_keyboard
        )
        
        # –°–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –æ –∑–∞–ø—É—Å–∫–µ —Ç–∞–π–º–µ—Ä–∞
        admin_keyboard_timer = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="‚è≥ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Å—Ç–∞–≤—à–µ–µ—Å—è –≤—Ä–µ–º—è", callback_data=f"check_time_admin_gift_system_{user_id}")],
            [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="to_home_menu")]
        ])
        
        await callback.bot.send_message(
            chat_id="-1002389059389",
            text=(
                f"‚úÖ –î–æ–Ω–∞—Ç —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º—É –ø–æ–¥–∞—Ä–∫–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID {user_id} –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω.\n"
                "‚è≥ –¢–∞–π–º–µ—Ä –Ω–∞ 48 —á–∞—Å–æ–≤ –∑–∞–ø—É—â–µ–Ω.\n"
                f"–û—Å—Ç–∞–ª–æ—Å—å: 48:00:00 –¥–æ –≤—ã–¥–∞—á–∏ –ø–æ–¥–∞—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–∞ –Ω–∏–∫ {nickname}."
            ),
            reply_markup=admin_keyboard_timer
        )
        
        await callback.message.edit_reply_markup()
        await callback.answer("‚úÖ –ü–æ–¥–∞—Ä–æ–∫ –∑–∞—á–∏—Å–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏ —Ç–∞–π–º–µ—Ä –∑–∞–ø—É—â–µ–Ω")
        
        # –ó–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–∞ –Ω–∞ 48 —á–∞—Å–æ–≤
        asyncio.create_task(start_timer_gift_system(user_id, 48))
    except Exception as e:
        print(f"Error in confirm_gift_system: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞—á–∏—Å–ª–µ–Ω–∏—è")

async def start_timer_gift_system(user_id: int, hours: int):
    try:
        await asyncio.sleep(hours * 3600)
        if user_id in timers:
            del timers[user_id]
        await bot.send_message(
            chat_id=user_id,
            text="‚è∞ –¢–∞–π–º–µ—Ä –Ω–∞ 48 —á–∞—Å–æ–≤ –∏—Å—Ç–µ–∫. –ï—Å–ª–∏ –≤—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ Battle Pass, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–∏–µ."
        )
    except Exception as e:
        print(f"Error in start_timer_gift_system: {e}")

@router.callback_query(F.data.startswith("gift_system_confirmed_"))
async def gift_system_confirmed(callback: CallbackQuery):
    try:
        await callback.message.edit_text(
            "‚úÖ –í—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∏ –∑–∞—á–∏—Å–ª–µ–Ω–∏–µ Battle Pass.",
            reply_markup=get_back_to_shop_keyboard()
        )
    except Exception as e:
        print(f"Error in gift_system_confirmed: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è")

@router.callback_query(F.data.startswith("gift_system_not_confirmed_"))
async def gift_system_not_confirmed(callback: CallbackQuery):
    try:
        await callback.message.edit_text(
            "‚ùå –ó–∞—á–∏—Å–ª–µ–Ω–∏–µ Battle Pass –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.",
            reply_markup=get_back_to_shop_keyboard()
        )
    except Exception as e:
        print(f"Error in gift_system_not_confirmed: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è")

@router.callback_query(F.data.startswith("check_time_regular_") | F.data.startswith("check_time_gift_system_") | F.data.startswith("check_time_admin_regular_") | F.data.startswith("check_time_admin_gift_system_"))
async def check_time(callback: CallbackQuery):
    try:
        # Extract user_id from callback data
        parts = callback.data.split("_")
        user_id = int(parts[-1])

        if user_id not in timers:
            await callback.answer("‚è≥ –¢–∞–π–º–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —É–∂–µ –∏—Å—Ç–µ–∫.")
            return

        end_time, nickname = timers[user_id]
        now = datetime.now()
        remaining = end_time - now

        if remaining.total_seconds() <= 0:
            await callback.answer("‚è≥ –¢–∞–π–º–µ—Ä –∏—Å—Ç–µ–∫.")
            del timers[user_id]
            return

        hours, remainder = divmod(int(remaining.total_seconds()), 3600)
        minutes, seconds = divmod(remainder, 60)
        time_left = f"{hours:02}:{minutes:02}:{seconds:02}"

        await callback.message.edit_text(
            f"‚è≥ –û—Å—Ç–∞–ª–æ—Å—å: {time_left} –¥–æ –≤—ã–¥–∞—á–∏ –ø–æ–¥–∞—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–∞ –Ω–∏–∫ {nickname}.",
            reply_markup=get_back_to_shop_keyboard()
        )
        await callback.answer(f"‚è≥ –û—Å—Ç–∞–ª–æ—Å—å: {time_left}")
    except Exception as e:
        print(f"Error in check_time: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –≤—Ä–µ–º–µ–Ω–∏")
