from aiogram import F, Router
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, Message, CallbackQuery
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from utils.database import Database
from keyboards.user_keyboards import to_home_menu_inline
from handlers.main_handlers.shop_functions.code_donate import get_admin_confirm_keyboard_login
from utils.varibles import COURSE_V_BAKS_TO_RUBLE
router = Router()
db = Database()

ADMIN_GROUP_CHAT_ID = -1002389059389

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –¥–æ–Ω–∞—Ç–∞
class CustomDonateStates(StatesGroup):
    entering_amount = State()
    confirming = State()
    entering_credentials = State()
    admin_confirmation = State()

def get_custom_donate_keyboard():
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="custom_confirm_donate")],
            [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="custom_cancel_donate")]
        ]
    )

def calculate_price(vbucks: int) -> float:
    """–†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç —Ü–µ–Ω—É –≤ —Ä—É–±–ª—è—Ö –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤-–±–∞–∫—Å–æ–≤"""
    base_rate = COURSE_V_BAKS_TO_RUBLE  # –ë–∞–∑–æ–≤—ã–π –∫—É—Ä—Å: 1 –≤-–±–∞–∫—Å = 0.95 —Ä—É–±–ª—è
    return round(vbucks * base_rate, 2)

@router.callback_query(F.data == "shop_account_donate")
async def custom_donate_start(callback: CallbackQuery, state: FSMContext):
    await callback.message.edit_text(
        "üí∞ –í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤-–±–∞–∫—Å–æ–≤ (–º–∏–Ω–∏–º—É–º 50):\n\n"
        f"–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å: 1 –≤-–±–∞–∫—Å = {COURSE_V_BAKS_TO_RUBLE}‚ÇΩ"

    )
    await state.set_state(CustomDonateStates.entering_amount)

@router.message(CustomDonateStates.entering_amount)
async def process_custom_amount(message: Message, state: FSMContext):
    try:
        amount = int(message.text)
        if amount < 50:
            await message.answer(
                "‚ùå –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –¥–æ–Ω–∞—Ç–∞ - 50 –≤-–±–∞–∫—Å–æ–≤\n"
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –±–æ–ª—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω—É—é 50"
            )
            return
            
        price = calculate_price(amount)
        await state.update_data(amount=amount, price=price)
        
        await message.answer(
            f"üéâ –í—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ {amount} –≤-–±–∞–∫—Å–æ–≤ –∑–∞ {price}‚ÇΩ\n\n"
            "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ –∑–∞–∫–∞–∑?",
            reply_markup=get_custom_donate_keyboard()
        )
        await state.set_state(CustomDonateStates.confirming)
        
    except ValueError:
        await message.answer(
            "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ –≤-–±–∞–∫—Å–æ–≤\n"
            "–¢–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã, –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤ –∏ –¥—Ä—É–≥–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤"
        )

@router.callback_query(F.data == "custom_cancel_donate")
async def custom_donate_cancel(callback: CallbackQuery, state: FSMContext):
    await callback.message.edit_text(
        "‚ùå –î–æ–Ω–∞—Ç –æ—Ç–º–µ–Ω–µ–Ω. –í—ã –º–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", 
        reply_markup=to_home_menu_inline()
    )
    await state.clear()
    await callback.answer()

@router.callback_query(F.data == "custom_confirm_donate")
async def custom_donate_confirm(callback: CallbackQuery, state: FSMContext):
    await callback.message.edit_text(
        "üîë –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–∏–∫ –∏ –ø–∞—Ä–æ–ª—å —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª.\n\n"
        "–ü—Ä–∏–º–µ—Ä: NickName Password123"
    )
    await state.set_state(CustomDonateStates.entering_credentials)

@router.message(CustomDonateStates.entering_credentials)
async def custom_donate_credentials(message: Message, state: FSMContext):
    try:
        credentials = message.text.split()
        if len(credentials) < 2:
            await message.answer("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∏–∫ –∏ –ø–∞—Ä–æ–ª—å —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª")
            return
            
        nickname = credentials[0]
        password = credentials[1]
        
        data = await state.get_data()
        amount = data.get("amount")
        price = data.get("price")
        user_id = message.from_user.id
        
        await message.delete()  # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —É—á–µ—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        
        await message.bot.send_message(
            ADMIN_GROUP_CHAT_ID,
            f"üîî –ù–æ–≤—ã–π –∫–∞—Å—Ç–æ–º–Ω—ã–π –¥–æ–Ω–∞—Ç!\n\n"
            f"–°—É–º–º–∞: {amount} –≤-–±–∞–∫—Å–æ–≤\n"
            f"–¶–µ–Ω–∞: {price}‚ÇΩ\n"
            f"–ù–∏–∫: {nickname}\n"
            f"–ü–∞—Ä–æ–ª—å: {password}\n\n"
            f"User ID: {user_id}",
            reply_markup=get_admin_confirm_keyboard_login(user_id)
        )
        
        await message.answer(
            "‚úÖ –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.\n"
            "–û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.", 
            reply_markup=to_home_menu_inline()
        )
        await state.set_state(CustomDonateStates.admin_confirmation)
        
    except Exception as e:
        await message.answer(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö.\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É."
        )
        await state.clear()
